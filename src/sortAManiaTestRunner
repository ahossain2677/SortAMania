public static void main (String[] args)
{

  SortCompetititon team 1 = new Team1SortCompetition(); // creates an instance for the class
  int [] randIntArr = randomIntsArr(10000); // initialize a random int array 
  String[] randStringArr = randomStringArr(10000,5); // init a random string array 
  
  System.out.println("Unsorted);
  printArr(randIntArr); // print out the unsorted int array
  
  long time = System.currentTimeMillis(); //start the timer
  int median = team1.challengeOne(randIntArr); // run your challenge one code 
  time = System.CurrentTimeMillis() - time; // stop the timer 
  System.out.println("Challenge One Time Taken: " + time*0.001 + "Seconds"); // print the time 
  System.out.println("Median equals: " + median); // print the median you found
  
  System.out.println("Sorted"); 
  printArr(randIntArr); // check if the array was sorted correctly 
  
  public static void main(String[] args) {
  //Challenge One
        int[] Arr = randomIntsArr(10000);

        System.out.print("Before: ");
        for (int num : Arr)
            System.out.print(num + " ");
        System.out.println();

        long time = System.nanoTime();
        challengeOne(Arr);
        time = System.nanoTime() - time;

        System.out.print("After: ");
        for (int num : Arr)
            System.out.print(num + " ");
        System.out.println();

        System.out.println("Time Taken: " + time);
        System.out.println("Median: " + challengeOne(Arr));
  
  //Challenge Three
        int[] Arr = randomNearSort(100000);

        System.out.print("Before: ");
        for (int num : Arr)
            System.out.print(num + " ");
        System.out.println();

        long time = System.nanoTime();
        challengeThree(Arr);
        System.out.println(med);
        time = System.nanoTime() - time;

        System.out.print("After: ");
        for (int num : Arr)
            System.out.print(num + " ");
        System.out.println();

        System.out.println("Time Taken: " + time);
    }
}
